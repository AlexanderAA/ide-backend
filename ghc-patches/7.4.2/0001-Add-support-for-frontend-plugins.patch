From d218c93b19490f9e15ccf87f2ea72188511aea3c Mon Sep 17 00:00:00 2001
From: Edsko de Vries <edsko@well-typed.com>
Date: Fri, 22 Feb 2013 14:06:33 +0000
Subject: [PATCH 1/2] Add support for "frontend plugins"

---
 compiler/ghc.cabal.in           |  1 +
 compiler/main/DynFlags.hs       |  3 +++
 compiler/main/HscMain.hs        |  8 ++++++--
 compiler/main/HscPlugin.hs      | 17 +++++++++++++++++
 compiler/main/HscPlugin.hs-boot |  3 +++
 5 files changed, 30 insertions(+), 2 deletions(-)
 create mode 100644 compiler/main/HscPlugin.hs
 create mode 100644 compiler/main/HscPlugin.hs-boot

diff --git a/compiler/ghc.cabal.in b/compiler/ghc.cabal.in
index 0f9eda9..015215f 100644
--- a/compiler/ghc.cabal.in
+++ b/compiler/ghc.cabal.in
@@ -320,6 +320,7 @@ Library
         DynamicLoading
         HeaderInfo
         HscMain
+        HscPlugin
         HscStats
         HscTypes
         InteractiveEval
diff --git a/compiler/main/DynFlags.hs b/compiler/main/DynFlags.hs
index 0d47446..e27806c 100644
--- a/compiler/main/DynFlags.hs
+++ b/compiler/main/DynFlags.hs
@@ -115,6 +115,7 @@ import Outputable
 import Foreign.C        ( CInt(..) )
 #endif
 import {-# SOURCE #-} ErrUtils ( Severity(..), Message, mkLocMessage )
+import {-# SOURCE #-} HscPlugin (HscPlugin)
 
 #ifdef GHCI
 import System.IO.Unsafe ( unsafePerformIO )
@@ -526,6 +527,7 @@ data DynFlags = DynFlags {
   -- Plugins
   pluginModNames        :: [ModuleName],
   pluginModNameOpts     :: [(ModuleName,String)],
+  sourcePlugins         :: [HscPlugin],
 
   --  For ghc -M
   depMakefile           :: FilePath,
@@ -881,6 +883,7 @@ defaultDynFlags mySettings =
 
         pluginModNames          = [],
         pluginModNameOpts       = [],
+        sourcePlugins           = [],
 
         outputFile              = Nothing,
         outputHi                = Nothing,
diff --git a/compiler/main/HscMain.hs b/compiler/main/HscMain.hs
index 88be2ed..a899b25 100644
--- a/compiler/main/HscMain.hs
+++ b/compiler/main/HscMain.hs
@@ -130,6 +130,7 @@ import NameSet          ( emptyNameSet )
 import InstEnv
 import FamInstEnv
 import Fingerprint      ( Fingerprint )
+import HscPlugin
 
 import DynFlags
 import ErrUtils
@@ -149,6 +150,7 @@ import Data.List
 import Control.Monad
 import Data.Maybe
 import Data.IORef
+import Data.Monoid (mconcat)
 import System.FilePath as FilePath
 import System.Directory
 
@@ -633,8 +635,10 @@ genericHscRecompile compiler mod_summary mb_old_hash
     | ExtCoreFile <- ms_hsc_src mod_summary =
         panic "GHC does not currently support reading External Core files"
     | otherwise = do
-        tc_result <- hscFileFrontEnd mod_summary
-        hscBackend compiler tc_result mod_summary mb_old_hash
+        dynFlags   <- getDynFlags
+        tc_result  <- hscFileFrontEnd mod_summary
+        tc_result' <- runHscPlugin (mconcat (sourcePlugins dynFlags)) dynFlags tc_result
+        hscBackend compiler tc_result' mod_summary mb_old_hash
 
 genericHscBackend :: HsCompiler a
                   -> TcGblEnv -> ModSummary -> Maybe Fingerprint
diff --git a/compiler/main/HscPlugin.hs b/compiler/main/HscPlugin.hs
new file mode 100644
index 0000000..feca61c
--- /dev/null
+++ b/compiler/main/HscPlugin.hs
@@ -0,0 +1,17 @@
+module HscPlugin
+  ( HscPlugin(..)
+  ) where
+
+import TcRnTypes
+import DynFlags
+import MonadUtils
+
+import Data.Monoid
+import Control.Monad
+
+data HscPlugin = HscPlugin { runHscPlugin :: forall m. MonadIO m => DynFlags -> TcGblEnv -> m TcGblEnv }
+
+instance Monoid HscPlugin where
+  mempty = HscPlugin $ const return
+  (HscPlugin f) `mappend` (HscPlugin g) = HscPlugin (\dynFlags -> f dynFlags >=> g dynFlags)
+
diff --git a/compiler/main/HscPlugin.hs-boot b/compiler/main/HscPlugin.hs-boot
new file mode 100644
index 0000000..0526efd
--- /dev/null
+++ b/compiler/main/HscPlugin.hs-boot
@@ -0,0 +1,3 @@
+module HscPlugin where
+
+data HscPlugin
-- 
1.7.12.4 (Apple Git-37)


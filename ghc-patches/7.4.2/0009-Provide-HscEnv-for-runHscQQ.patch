From 17c7e61bf7ad34e335c4a52a9854198af1964008 Mon Sep 17 00:00:00 2001
From: Edsko de Vries <edsko@well-typed.com>
Date: Thu, 16 May 2013 16:11:44 +0100
Subject: [PATCH 9/9] Provide HscEnv for runHscQQ

(This contains the dynflags, the global reader environment, the current source
span, etc.)
---
 compiler/main/HscPlugin.hs      | 12 +++++++++---
 compiler/typecheck/TcSplice.lhs | 11 +++--------
 2 files changed, 12 insertions(+), 11 deletions(-)

diff --git a/compiler/main/HscPlugin.hs b/compiler/main/HscPlugin.hs
index d0a3743..f30ab00 100644
--- a/compiler/main/HscPlugin.hs
+++ b/compiler/main/HscPlugin.hs
@@ -2,6 +2,7 @@ module HscPlugin
   ( HscPlugin(..)
   ) where
 
+import Prelude hiding (span)
 import TcRnTypes
 import DynFlags
 import MonadUtils
@@ -12,8 +13,13 @@ import Data.Monoid
 import Control.Monad
 
 data HscPlugin = HscPlugin {
-    runHscPlugin :: forall m. MonadIO m => DynFlags -> TcGblEnv -> m TcGblEnv
-  , runHscQQ     :: forall m. MonadIO m => DynFlags -> HsQuasiQuote Name -> m (HsQuasiQuote Name)
+    runHscPlugin :: forall m. MonadIO m => DynFlags
+                                        -> TcGblEnv
+                                        -> m TcGblEnv
+
+  , runHscQQ     :: forall m. MonadIO m => Env TcGblEnv TcLclEnv
+                                        -> HsQuasiQuote Name
+                                        -> m (HsQuasiQuote Name)
   }
 
 instance Monoid HscPlugin where
@@ -24,5 +30,5 @@ instance Monoid HscPlugin where
 
   a `mappend` b = HscPlugin {
       runHscPlugin = \dynFlags -> runHscPlugin a dynFlags >=> runHscPlugin b dynFlags
-    , runHscQQ     = \dynFlags -> runHscQQ     a dynFlags >=> runHscQQ     b dynFlags
+    , runHscQQ     = \env      -> runHscQQ     a env      >=> runHscQQ     b env
     }
diff --git a/compiler/typecheck/TcSplice.lhs b/compiler/typecheck/TcSplice.lhs
index 87c4bdd..53c2494 100644
--- a/compiler/typecheck/TcSplice.lhs
+++ b/compiler/typecheck/TcSplice.lhs
@@ -670,11 +670,6 @@ the splice is run by the *renamer* rather than the type checker.
 See Note [Quasi-quote overview] in TcSplice.
 
 \begin{code}
-getDynFlags :: RnM DynFlags
-getDynFlags = do
-  env <- getEnv
-  return (hsc_dflags (env_top env)) 
-
 runQuasiQuote :: Outputable hs_syn
               => HsQuasiQuote RdrName   -- Contains term of type QuasiQuoter, and the String
               -> Name                   -- Of type QuasiQuoter -> String -> Q th_syn
@@ -712,10 +707,10 @@ runQuasiQuote (HsQuasiQuote quoter q_span quote) quote_selector meta_ty meta_ops
         ; traceTc "runQQ" (ppr quoter <+> ppr is_local)
 
           -- Notify any source plugins about the QQ
-        ; dynFlags <- getDynFlags
+        ; env <- getEnv 
         ; HsQuasiQuote quoter' q_span quote <- 
-            runHscQQ (mconcat (sourcePlugins dynFlags)) 
-                     dynFlags
+            runHscQQ (mconcat . sourcePlugins . hsc_dflags . env_top $ env) 
+                     env 
                      (HsQuasiQuote quoter' q_span quote)
 
           -- Build the expression
-- 
1.7.12.4 (Apple Git-37)

